% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/s3io_write.R
\name{s3io_write}
\alias{s3io_write}
\title{Write a file to AWS S3}
\usage{
s3io_write(
  obj,
  bucket,
  key,
  writefun,
  ...,
  .localfile = fs::file_temp(),
  .rm_localfile = TRUE,
  .aws_config = NULL,
  .put_object_opts = NULL,
  .opts = .aws_config
)
}
\arguments{
\item{obj}{<anything> The object to write.}

\item{bucket}{<chr(1)> AWS S3 bucket name.}

\item{key}{<chr(1)> AWS S3 object key.}

\item{writefun}{<function> A write function where the first argument is the object to write and the second argument is a filepath.
The function's signature should look like \code{writefun(obj, file, ...)}.}

\item{...}{Additional arguments passed on to \code{writefun}.}

\item{.localfile}{<chr(1)> The local filepath for the initial write-to-disk.}

\item{.rm_localfile}{<lgl(1)> Remove \code{localfile} once the copy-to-S3 is complete?}

\item{.opts}{<dict> Additional --opts for the AWS CLI `aws s3api put-object` command.
A common option you may want to specify, e.g., is content-type: \code{.opts = list("content-type" = "application/json")}.}
}
\value{
The returned value from \code{writefun}.
}
\description{
Write a file to AWS S3
}
\examples{
\dontrun{
  s3io_write(iris, "mybucket", "my/object/key.csv", readr::write_csv, col_names = TRUE)
}
}
